// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: posts.sql

package database

import (
	"context"
	"database/sql"
	"time"
)

const createPost = `-- name: CreatePost :exec
INSERT INTO posts (
    id,
    created_at, 
    updated_at,
    title,
    description,
    published_at,
    url,
    feed_id
) 
VALUES (?,?,?,?,?,?,?,?)
`

type CreatePostParams struct {
	ID          string
	CreatedAt   time.Time
	UpdatedAt   time.Time
	Title       string
	Description sql.NullString
	PublishedAt time.Time
	Url         string
	FeedID      string
}

func (q *Queries) CreatePost(ctx context.Context, arg CreatePostParams) error {
	_, err := q.db.ExecContext(ctx, createPost,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Title,
		arg.Description,
		arg.PublishedAt,
		arg.Url,
		arg.FeedID,
	)
	return err
}

const getPost = `-- name: GetPost :one
SELECT id, created_at, updated_at, name, api_key FROM users WHERE id = ?
`

func (q *Queries) GetPost(ctx context.Context, id string) (User, error) {
	row := q.db.QueryRowContext(ctx, getPost, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.ApiKey,
	)
	return i, err
}
